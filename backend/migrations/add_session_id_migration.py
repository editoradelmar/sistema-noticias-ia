#!/usr/bin/env python3
"""
Script para a√±adir columna session_id a m√©tricas
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import text
from core.database import SessionLocal

def add_session_id_column():
    """A√±ade columna session_id a la tabla metricas_valor_periodistico"""
    db = SessionLocal()
    try:
        print("üîß A√±adiendo columna session_id...")
        
        # 1. A√±adir columna session_id
        db.execute(text("ALTER TABLE metricas_valor_periodistico ADD COLUMN session_id VARCHAR(100);"))
        print("‚úÖ Columna session_id a√±adida")
        
        # 2. Crear √≠ndice
        db.execute(text("CREATE INDEX idx_metricas_session_id ON metricas_valor_periodistico(session_id);"))
        print("‚úÖ √çndice creado")
        
        # 3. Hacer noticia_id nullable
        db.execute(text("ALTER TABLE metricas_valor_periodistico ALTER COLUMN noticia_id DROP NOT NULL;"))
        print("‚úÖ noticia_id ahora es nullable")
        
        # 4. A√±adir constraint
        db.execute(text("""
            ALTER TABLE metricas_valor_periodistico 
            ADD CONSTRAINT chk_noticia_or_session 
            CHECK (
                (noticia_id IS NOT NULL AND session_id IS NULL) OR 
                (noticia_id IS NULL AND session_id IS NOT NULL)
            );
        """))
        print("‚úÖ Constraint a√±adido")
        
        db.commit()
        print("üéâ Migraci√≥n completada exitosamente!")
        
    except Exception as e:
        print(f"‚ùå Error durante migraci√≥n: {e}")
        db.rollback()
        
        # Verificar si ya existe la columna
        result = db.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'metricas_valor_periodistico' 
            AND column_name = 'session_id';
        """))
        
        if result.fetchone():
            print("‚úÖ La columna session_id ya existe")
        else:
            raise e
    finally:
        db.close()

if __name__ == "__main__":
    add_session_id_column()