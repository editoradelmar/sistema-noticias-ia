"""
Script para crear noticias de ejemplo con diferentes autores
Esto ayudar√° a probar el sistema de filtrado por autor
"""
import sys
from sqlalchemy.orm import Session, joinedload
from core.database import SessionLocal
from models import orm_models
from datetime import datetime, timedelta
import random

def create_sample_news():
    """Crear noticias de ejemplo con diferentes autores"""
    db: Session = SessionLocal()
    
    try:
        # Obtener usuarios para asignar como autores
        usuarios = db.query(orm_models.Usuario).filter(orm_models.Usuario.is_active == True).all()
        
        if len(usuarios) < 5:
            print("‚ùå Se necesitan al menos 5 usuarios activos. Ejecuta add_users.py primero.")
            return
        
        # Obtener secciones
        secciones = db.query(orm_models.Seccion).filter(orm_models.Seccion.activo == True).all()
        
        if len(secciones) == 0:
            print("‚ùå No hay secciones activas en el sistema.")
            return
        
        # Noticias de ejemplo
        noticias_ejemplo = [
            {
                'titulo': 'Nuevo desarrollo urbano en el centro de la ciudad',
                'contenido': 'Las autoridades municipales anunciaron un ambicioso proyecto de renovaci√≥n urbana que transformar√° el centro hist√≥rico de la ciudad. El proyecto incluye la construcci√≥n de nuevas √°reas verdes, mejoramiento del transporte p√∫blico y modernizaci√≥n de la infraestructura.',
                'dias_atras': 1
            },
            {
                'titulo': 'Festival de m√∫sica local atrae miles de visitantes',
                'contenido': 'El festival anual de m√∫sica local concluy√≥ con gran √©xito, atrayendo a m√°s de 10,000 visitantes durante el fin de semana. Los organizadores destacaron la participaci√≥n de 25 bandas locales y el impacto econ√≥mico positivo para la regi√≥n.',
                'dias_atras': 2
            },
            {
                'titulo': 'Nueva tecnolog√≠a mejora servicios de salud p√∫blica',
                'contenido': 'El hospital regional implement√≥ un sistema de telemedicina que permitir√° atender a pacientes en zonas rurales remotas. Esta iniciativa busca reducir las brechas de acceso a servicios m√©dicos especializados.',
                'dias_atras': 3
            },
            {
                'titulo': 'Programa educativo beneficia a estudiantes de escasos recursos',
                'contenido': 'Un nuevo programa de becas estudiantiles beneficiar√° a 200 j√≥venes de familias de bajos ingresos. La iniciativa incluye apoyo econ√≥mico, material educativo y tutor√≠as especializadas.',
                'dias_atras': 4
            },
            {
                'titulo': 'Inversi√≥n extranjera impulsa sector manufacturero',
                'contenido': 'Una empresa multinacional anunci√≥ la apertura de una nueva planta manufacturera que generar√° 500 empleos directos. La inversi√≥n de $50 millones fortalecer√° la econom√≠a local y promover√° la transferencia de tecnolog√≠a.',
                'dias_atras': 5
            },
            {
                'titulo': 'Campa√±a ambiental promueve el reciclaje urbano',
                'contenido': 'La municipalidad lanz√≥ una campa√±a de concienciaci√≥n ambiental que ha logrado incrementar el reciclaje dom√©stico en un 40%. La iniciativa incluye talleres comunitarios y la instalaci√≥n de nuevos puntos de recolecci√≥n.',
                'dias_atras': 6
            },
            {
                'titulo': 'Competencia deportiva regional re√∫ne a j√≥venes atletas',
                'contenido': 'M√°s de 300 j√≥venes atletas participaron en los juegos deportivos regionales celebrados el fin de semana. La competencia incluy√≥ 15 disciplinas deportivas y promovi√≥ valores de compa√±erismo y fair play.',
                'dias_atras': 7
            },
            {
                'titulo': 'Innovaci√≥n tecnol√≥gica en agricultura local',
                'contenido': 'Agricultores locales adoptan nuevas t√©cnicas de cultivo asistidas por drones y sensores IoT. Estas tecnolog√≠as prometen incrementar la productividad y reducir el impacto ambiental.',
                'dias_atras': 8
            }
        ]
        
        print(f"\nüì∞ Creando {len(noticias_ejemplo)} noticias de ejemplo")
        print("=" * 60)
        
        created_count = 0
        
        for i, noticia_data in enumerate(noticias_ejemplo):
            # Asignar autor aleatorio
            autor = random.choice(usuarios)
            
            # Asignar secci√≥n aleatoria
            seccion = random.choice(secciones)
            
            # Calcular fecha
            fecha_noticia = datetime.now() - timedelta(days=noticia_data['dias_atras'])
            
            # Crear noticia
            nueva_noticia = orm_models.Noticia(
                titulo=noticia_data['titulo'],
                contenido=noticia_data['contenido'],
                fecha=fecha_noticia,
                estado='publicado',
                usuario_id=autor.id,  # Usar usuario_id en lugar de autor_id
                autor=autor.username,  # Usar username en lugar de nombre_completo
                seccion_id=seccion.id,
                proyecto_id=None  # Sin proyecto asignado por ahora
            )
            
            db.add(nueva_noticia)
            db.commit()
            db.refresh(nueva_noticia)
            
            print(f"‚úÖ Noticia #{nueva_noticia.id}: {noticia_data['titulo'][:50]}...")
            print(f"   üë§ Autor: {autor.username} ({autor.nombre_completo})")
            print(f"   üìÇ Secci√≥n: {seccion.nombre}")
            print(f"   üìÖ Fecha: {fecha_noticia.strftime('%Y-%m-%d')}")
            print()
            
            created_count += 1
        
        print(f"üìä Resumen:")
        print(f"   ‚úÖ Noticias creadas: {created_count}")
        print(f"   üë• Autores disponibles: {len(usuarios)}")
        print(f"   üìÇ Secciones disponibles: {len(secciones)}")
        print(f"\nüí° Ahora puedes probar los filtros por autor en el frontend!")
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        db.rollback()
    finally:
        db.close()

def list_news():
    """Listar noticias existentes"""
    db: Session = SessionLocal()
    
    try:
        # Usar joinedload para cargar las relaciones
        noticias = db.query(orm_models.Noticia).options(
            joinedload(orm_models.Noticia.usuario_creador),
            joinedload(orm_models.Noticia.seccion)
        ).order_by(orm_models.Noticia.fecha.desc()).limit(10).all()
        
        print(f"\nüì∞ √öltimas {len(noticias)} noticias en el sistema")
        print("=" * 80)
        
        for noticia in noticias:
            # Usar la propiedad autor_nombre que definimos en el modelo
            autor_nombre = noticia.autor_nombre
            seccion_nombre = noticia.seccion.nombre if noticia.seccion else "Sin secci√≥n"
            
            print(f"ID: {noticia.id} | {noticia.titulo[:50]}...")
            print(f"   üë§ {autor_nombre} | üìÇ {seccion_nombre} | üìÖ {noticia.fecha.strftime('%Y-%m-%d')}")
            print()
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        import traceback
        traceback.print_exc()
    finally:
        db.close()

def main():
    """Men√∫ principal"""
    while True:
        print("\nüì∞ Crear Noticias de Ejemplo")
        print("=" * 40)
        print("1. Crear noticias de ejemplo")
        print("2. Listar noticias existentes")
        print("3. Salir")
        
        choice = input("\nSelecciona una opci√≥n (1-3): ").strip()
        
        if choice == '1':
            create_sample_news()
        elif choice == '2':
            list_news()
        elif choice == '3':
            print("üëã ¬°Hasta luego!")
            break
        else:
            print("‚ùå Opci√≥n inv√°lida")

if __name__ == "__main__":
    main()